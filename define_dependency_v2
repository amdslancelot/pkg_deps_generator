#!/bin/bash
SPECFILE=$1
REQTYPE=$2
RPM_LIST=$3

DEBUG=0
tabs 60

function debug {
	if [[ $DEBUG == 1 ]]; then
		echo -e $1
	fi
}



#
#
#
if [ -z $SPECFILE ] || [ -z $REQTYPE ] || [ -z $RPM_LIST ]; then
	echo "[ERROR] usage: define_dependency_v2 PATH_TO_SPECFILE BuildRequires/Requires PATH_TO_RPM_LIST"
	exit
fi


rpm_list=$(cat $RPM_LIST)

while IFS= read -r l; do
	arr_require_statement=($l)
	debug "\n------\n$REQTYPE dependency from spec file: ${arr_require_statement[1]}"
	debug "command: dnf provides \"${arr_require_statement[1]}\""
	while IFS= read -r ll; do
		debug $ll
		if [[ $ll = Last* ]]; then
			debug "skipping line: $ll"
			continue
		fi
		pkgname_with_ver=$(echo "$ll" | sed 's/\s.*$//')
		debug "pkgname_with_ver=$pkgname_with_ver"
		pkgname=$(./package_name_parser $pkgname_with_ver)
		break
	done < <(dnf provides ${arr_require_statement[1]})

	found_match=false
	while IFS= read -r ll; do
		#debug "$ll"
		pkgname_with_ver_from_file=$(echo "$ll" | sed 's/\s.*$//')
		pkgname_from_file=$(./package_name_parser $pkgname_with_ver_from_file)
		debug "pkgname_from_file: $pkgname_from_file"
		if [ "$pkgname_from_file" == "$pkgname" ]; then
			found_match=true
			break
		fi
	done < <(printf '%s\n' "$rpm_list")
	if $found_match; then
		echo -e "Dependency: ${arr_require_statement[1]},\t found $REQTYPE dependency $pkgname"
	else
		echo -e "Dependency: ${arr_require_statement[1]},\t dnf provides: $pkgname. can't find match from rpm list."
	fi
	
done < <(rpmspec -P $SPECFILE | grep ^$REQTYPE)
